# Create variables for

trigger:
- main

resources:
- repo: self

variables:
  applicationName: 'cpfdevportal'
  containerRegistry: 'cpfdevportal.azurecr.io'
  dockercomposefilePath: '$(Build.SourcesDirectory)/docker-compose.yml'
  tag: '$(Build.BuildId)'

  vmImageName: 'ubuntu-latest'

stages:
- stage: UnitTest
  displayName: Unit Tests
  jobs:
  - job: Test
    displayName: Unit Test Custom Validation Rules
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Update Node.js'
    - script: |
        npm -g install npm@latest
        cd src/node
        npm install
        npm run test
      displayName: 'Change working directory, install dependencies and run unit tests'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/node/unit_test/coverage/cobertura-coverage.xml'
      displayName: 'Publish Code Coverage'

- stage: BuildAndPush
  displayName: Build and Push into Container Registry
  jobs:
  - job: BuildAndPush
    displayName: Build and Push Containers
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureCLI@2
      name: ProduceFlaskUrl
      inputs:
        azureSubscription: $(AZURESUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=flaskUrl; isOutput=true]$(az webapp show --name cpfdevportal --resource-group cpfdevportal-rg --query 'defaultHostName' -o tsv)"
    
    - bash: echo $(flaskUrl)
      name: CheckFlaskUrl

    - task: AzureCLI@2
      name: ProduceNodeUrl
      inputs:
        azureSubscription: '$(AZURESUBSCRIPTION)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=nodeUrl; isOutput=true]$(az webapp show --name cpfdevportal-node --resource-group cpfdevportal-rg --query 'defaultHostName' -o tsv)"
    
    - bash: echo $(nodeUrl)
      name: CheckNodeUrl

    - task: Docker@2
      inputs:
        containerRegistry: 'cpfdevportal'
        repository: 'danielxdantecpfdevportal_node'
        command: 'buildAndPush'
        Dockerfile: 'src/node/Dockerfile'
        tags: |
          latest
      displayName: 'Build and Push Node Server'
    - task: Docker@2
      inputs:
        containerRegistry: 'cpfdevportal'
        repository: 'danielxdantecpfdevportal_flask'
        command: 'buildAndPush'
        Dockerfile: 'src/Dockerfile'
        tags: |
          latest
      displayName: 'Build and Push Flask Server'


- stage: Deploy
  displayName: Deploy Web Apps
  jobs:
  - job: Deploy
    displayName: Deployment
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: '$(AZURESUBSCRIPTION)'
        appName: 'cpfdevportal-node'
        containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_node:latest'
      displayName: 'Deploy Node container to cpfdevportal-node.azurewebsites.net'
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: '$(AZURESUBSCRIPTION)'
        appName: 'cpfdevportal'
        containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_flask:latest'
      displayName: 'Deploy Flask container to cpfdevportal.azurewebsites.net'


- stage: IntegrationAndE2ETest
  displayName: Integration And E2E Tests
  jobs:
  - job: Test
    displayName: E2E Test
    steps:
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-azurepipelines
      workingDirectory: '$(System.DefaultWorkingDirectory)/src'
      displayName: 'Install Dependencies'
     
    - script: |
        pytest e2e_test.py
      workingDirectory: '$(System.DefaultWorkingDirectory)/src/e2e_test'
      displayName: 'Selenium Pytest'