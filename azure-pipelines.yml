# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  applicationName: 'cpfdevportal'
  dockerRegistryServiceConnection: 'a3b968c1-9a21-4d22-b80e-d4b6241e3bb4'
  containerRegistry: 'cpfdevportal.azurecr.io'
  dockercomposefilePath: '$(Build.SourcesDirectory)/docker-compose.yml'
  tag: '$(Build.BuildId)'

  vmImageName: 'ubuntu-latest'

stages:
- stage: ProcessEnvironmentVariables
  displayName: Process Environment Variables
  jobs:
  - job: GetAppServiceURLs
    steps: 
    - task: AzureCLI@2
      name: ProduceFlaskUrl
      inputs:
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          flaskUrl=$(az webapp show --name cpfdevportal --resource-group cpfdevportal-rg --query 'defaultHostName' -o tsv)
          echo $flaskUrl
          echo "##vso[task.setvariable variable=flaskUrl; isOutput=true]$flaskUrl"


    - task: AzureCLI@2
      name: ProduceNodeUrl
      inputs:
        azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          nodeUrl=$(az webapp show --name cpfdevportal-node --resource-group cpfdevportal-rg --query 'defaultHostName' -o tsv)
          echo $nodeUrl

- stage: Test
  dependsOn: 
  - ProcessEnvironmentVariables
  displayName: Test
  jobs:
  - job: Geturl
    variables:
      derivedFlaskUrl: $[stageDependencies.ProcessEnvironmentVariables.GetAppServiceURLs.outputs['ProduceFlaskUrl.flaskUrl']]
    steps:
    - script: echo $(derivedFlaskUrl)
          

# - stage: UnitTest
#   displayName: Unit Tests
#   jobs:
#   - job: Test
#     displayName: Unit Test Custom Validation Rules
#     steps:
#     - task: NodeTool@0
#       inputs:
#         versionSpec: '16.x'
#       displayName: 'Update Node.js'
#     - script: |
#         npm -g install npm@latest
#         cd src/node
#         npm install
#         npm run test
#       displayName: 'Change working directory, install dependencies and run unit tests'
#     - task: PublishCodeCoverageResults@1
#       inputs:
#         codeCoverageTool: 'Cobertura'
#         summaryFileLocation: '$(System.DefaultWorkingDirectory)/src/node/unit_test/coverage/cobertura-coverage.xml'
#       displayName: 'Publish Code Coverage'

# - stage: BuildAndPush
#   displayName: Build and Push into Container Registry
#   jobs:
#   - job: BuildAndPush
#     displayName: Build and Push Containers
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     # - task: DockerCompose@0
#     #   inputs:
#     #     containerregistrytype: 'Azure Container Registry'
#     #     azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
#     #     azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
#     #     dockerComposeFile: $(dockercomposefilePath)
#     #     action: 'Build services'
#     #     additionalImageTags: '$(Build.BuildId)'
#     #     includeLatestTag: true
#     # - task: DockerCompose@0
#     #   inputs:
#     #     containerregistrytype: 'Azure Container Registry'
#     #     azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
#     #     azureContainerRegistry: '{"loginServer":"cpfdevportal.azurecr.io", "id" : "/subscriptions/dcdbed32-b8b2-4d69-8521-ba8b9056add8/resourceGroups/cpfdevportal-rg/providers/Microsoft.ContainerRegistry/registries/cpfdevportal"}'
#     #     dockerComposeFile: $(dockercomposefilePath)
#     #     action: 'Push services'
#     #     additionalImageTags: '$(Build.BuildId)'
#     #     includeLatestTag: true
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'cpfdevportal'
#         repository: 'danielxdantecpfdevportal_node'
#         command: 'buildAndPush'
#         Dockerfile: 'src/node/Dockerfile'
#         tags: |
#           latest
#       displayName: 'Build and Push Node Server'
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'cpfdevportal'
#         repository: 'danielxdantecpfdevportal_flask'
#         command: 'buildAndPush'
#         Dockerfile: 'src/Dockerfile'
#         tags: |
#           latest
#       displayName: 'Build and Push Flask Server'


# - stage: Deploy
#   displayName: Deploy Web Apps
#   jobs:
#   - job: Deploy
#     displayName: Deployment
#     steps:
#     - task: AzureWebAppContainer@1
#       inputs:
#         azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
#         appName: 'cpfdevportal-node'
#         containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_node:latest'
#       displayName: 'Deploy Node container to cpfdevportal-node.azurewebsites.net'
#     - task: AzureWebAppContainer@1
#       inputs:
#         azureSubscription: 'Azure for Students (dcdbed32-b8b2-4d69-8521-ba8b9056add8)'
#         appName: 'cpfdevportal'
#         containers: 'cpfdevportal.azurecr.io/danielxdantecpfdevportal_flask:latest'
#       displayName: 'Deploy Flask container to cpfdevportal.azurewebsites.net'


# - stage: IntegrationAndE2ETest
#   displayName: Integration And E2E Tests
#   jobs:
#   - job: Test
#     displayName: E2E Test
#     steps:
#     - script: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install pytest pytest-azurepipelines
#       workingDirectory: '$(System.DefaultWorkingDirectory)/src'
#       displayName: 'Install Dependencies'
     
#     - script: |
#         pytest e2e_test.py
#       workingDirectory: '$(System.DefaultWorkingDirectory)/src/e2e_test'
#       displayName: 'Selenium Pytest'